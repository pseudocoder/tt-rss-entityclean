<?php
//
// EntityClean plugin for TT-RSS
// Â© 2017 Pseudocode (https://www.pseudocode.eu)
//
// Released through GitHub (https://github.com/pseudocoder/tt-rss-entityclean) under the Apache 2.0 license
//
// to use this plugin:
//
// create a directory entityclean in <tt-rss>/plugins/
// copy this file to be <tt-rss>/plugins/entityclean/init.php
//
// No configuration is required, it will run on all feeds
//
class EntityClean extends Plugin {
	
	private $host;

	function about() {
		return array(1.1,
			"Change HTML named entities to numeric versions to make XML friendly",
			"pseudocode@pseudocode.eu",
			false);
	}
	
	function api_version() {
		return 2;
	}

	function init($host) {
		$this->host = $host;
		$host->add_hook($host::HOOK_FEED_FETCHED, $this);
	}
	
	function hook_feed_fetched($feed_data) {
		
		$replace = [
			"/&nbsp;/i" => "&#160;",
			"/&iexcl;/i" => "&#161;",
			"/&cent;/i" => "&#162;",
			"/&pound;/i" => "&#163;",
			"/&curren;/i" => "&#164;",
			"/&yen;/i" => "&#165;",
			"/&brvbar;/i" => "&#166;",
			"/&sect;/i" => "&#167;",
			"/&uml;/i" => "&#168;",
			"/&copy;/i" => "&#169;",
			"/&ordf;/i" => "&#170;",
			"/&laquo;/i" => "&#171;",
			"/&not;/i" => "&#172;",
			"/&shy;/i" => "&#173;",
			"/&reg;/i" => "&#174;",
			"/&macr;/i" => "&#175;",
			"/&deg;/i" => "&#176;",
			"/&plusmn;/i" => "&#177;",
			"/&sup2;/i" => "&#178;",
			"/&sup3;/i" => "&#179;",
			"/&acute;/i" => "&#180;",
			"/&micro;/i" => "&#181;",
			"/&para;/i" => "&#182;",
			"/&middot;/i" => "&#183;",
			"/&cedil;/i" => "&#184;",
			"/&sup1;/i" => "&#185;",
			"/&ordm;/i" => "&#186;",
			"/&raquo;/i" => "&#187;",
			"/&frac14;/i" => "&#188;",
			"/&frac12;/i" => "&#189;",
			"/&frac34;/i" => "&#190;",
			"/&iquest;/i" => "&#191;",
			"/&agrave;/i" => "&#192;",
			"/&aacute;/i" => "&#193;",
			"/&acirc;/i" => "&#194;",
			"/&atilde;/i" => "&#195;",
			"/&auml;/i" => "&#196;",
			"/&aring;/i" => "&#197;",
			"/&aelig;/i" => "&#198;",
			"/&ccedil;/i" => "&#199;",
			"/&egrave;/i" => "&#200;",
			"/&eacute;/i" => "&#201;",
			"/&ecirc;/i" => "&#202;",
			"/&euml;/i" => "&#203;",
			"/&igrave;/i" => "&#204;",
			"/&iacute;/i" => "&#205;",
			"/&icirc;/i" => "&#206;",
			"/&iuml;/i" => "&#207;",
			"/&eth;/i" => "&#208;",
			"/&ntilde;/i" => "&#209;",
			"/&ograve;/i" => "&#210;",
			"/&oacute;/i" => "&#211;",
			"/&ocirc;/i" => "&#212;",
			"/&otilde;/i" => "&#213;",
			"/&ouml;/i" => "&#214;",
			"/&times;/i" => "&#215;",
			"/&oslash;/i" => "&#216;",
			"/&ugrave;/i" => "&#217;",
			"/&uacute;/i" => "&#218;",
			"/&ucirc;/i" => "&#219;",
			"/&uuml;/i" => "&#220;",
			"/&yacute;/i" => "&#221;",
			"/&thorn;/i" => "&#222;",
			"/&szlig;/i" => "&#223;",
			"/&agrave;/i" => "&#224;",
			"/&aacute;/i" => "&#225;",
			"/&acirc;/i" => "&#226;",
			"/&atilde;/i" => "&#227;",
			"/&auml;/i" => "&#228;",
			"/&aring;/i" => "&#229;",
			"/&aelig;/i" => "&#230;",
			"/&ccedil;/i" => "&#231;",
			"/&egrave;/i" => "&#232;",
			"/&eacute;/i" => "&#233;",
			"/&ecirc;/i" => "&#234;",
			"/&euml;/i" => "&#235;",
			"/&igrave;/i" => "&#236;",
			"/&iacute;/i" => "&#237;",
			"/&icirc;/i" => "&#238;",
			"/&iuml;/i" => "&#239;",
			"/&eth;/i" => "&#240;",
			"/&ntilde;/i" => "&#241;",
			"/&ograve;/i" => "&#242;",
			"/&oacute;/i" => "&#243;",
			"/&ocirc;/i" => "&#244;",
			"/&otilde;/i" => "&#245;",
			"/&ouml;/i" => "&#246;",
			"/&divide;/i" => "&#247;",
			"/&oslash;/i" => "&#248;",
			"/&ugrave;/i" => "&#249;",
			"/&uacute;/i" => "&#250;",
			"/&ucirc;/i" => "&#251;",
			"/&uuml;/i" => "&#252;",
			"/&yacute;/i" => "&#253;",
			"/&thorn;/i" => "&#254;",
			"/&yuml;/i" => "&#255;",
			"/&oelig;/i" => "&#338;",
			"/&oelig;/i" => "&#339;",
			"/&scaron;/i" => "&#352;",
			"/&scaron;/i" => "&#353;",
			"/&yuml;/i" => "&#376;",
			"/&fnof;/i" => "&#402;",
			"/&circ;/i" => "&#710;",
			"/&tilde;/i" => "&#732;",
			"/&alpha;/i" => "&#913;",
			"/&beta;/i" => "&#914;",
			"/&gamma;/i" => "&#915;",
			"/&delta;/i" => "&#916;",
			"/&epsilon;/i" => "&#917;",
			"/&zeta;/i" => "&#918;",
			"/&eta;/i" => "&#919;",
			"/&theta;/i" => "&#920;",
			"/&iota;/i" => "&#921;",
			"/&kappa;/i" => "&#922;",
			"/&lambda;/i" => "&#923;",
			"/&mu;/i" => "&#924;",
			"/&nu;/i" => "&#925;",
			"/&xi;/i" => "&#926;",
			"/&omicron;/i" => "&#927;",
			"/&pi;/i" => "&#928;",
			"/&rho;/i" => "&#929;",
			"/&sigma;/i" => "&#931;",
			"/&tau;/i" => "&#932;",
			"/&upsilon;/i" => "&#933;",
			"/&phi;/i" => "&#934;",
			"/&chi;/i" => "&#935;",
			"/&psi;/i" => "&#936;",
			"/&omega;/i" => "&#937;",
			"/&alpha;/i" => "&#945;",
			"/&beta;/i" => "&#946;",
			"/&gamma;/i" => "&#947;",
			"/&delta;/i" => "&#948;",
			"/&epsilon;/i" => "&#949;",
			"/&zeta;/i" => "&#950;",
			"/&eta;/i" => "&#951;",
			"/&theta;/i" => "&#952;",
			"/&iota;/i" => "&#953;",
			"/&kappa;/i" => "&#954;",
			"/&lambda;/i" => "&#955;",
			"/&mu;/i" => "&#956;",
			"/&nu;/i" => "&#957;",
			"/&xi;/i" => "&#958;",
			"/&omicron;/i" => "&#959;",
			"/&pi;/i" => "&#960;",
			"/&rho;/i" => "&#961;",
			"/&sigmaf;/i" => "&#962;",
			"/&sigma;/i" => "&#963;",
			"/&tau;/i" => "&#964;",
			"/&upsilon;/i" => "&#965;",
			"/&phi;/i" => "&#966;",
			"/&chi;/i" => "&#967;",
			"/&psi;/i" => "&#968;",
			"/&omega;/i" => "&#969;",
			"/&thetasym;/i" => "&#977;",
			"/&upsih;/i" => "&#978;",
			"/&piv;/i" => "&#982;",
			"/&ensp;/i" => "&#8194;",
			"/&emsp;/i" => "&#8195;",
			"/&thinsp;/i" => "&#8201;",
			"/&zwnj;/i" => "&#8204;",
			"/&zwj;/i" => "&#8205;",
			"/&lrm;/i" => "&#8206;",
			"/&rlm;/i" => "&#8207;",
			"/&ndash;/i" => "&#8211;",
			"/&mdash;/i" => "&#8212;",
			"/&lsquo;/i" => "&#8216;",
			"/&rsquo;/i" => "&#8217;",
			"/&sbquo;/i" => "&#8218;",
			"/&ldquo;/i" => "&#8220;",
			"/&rdquo;/i" => "&#8221;",
			"/&bdquo;/i" => "&#8222;",
			"/&dagger;/i" => "&#8224;",
			"/&dagger;/i" => "&#8225;",
			"/&bull;/i" => "&#8226;",
			"/&hellip;/i" => "&#8230;",
			"/&permil;/i" => "&#8240;",
			"/&prime;/i" => "&#8242;",
			"/&prime;/i" => "&#8243;",
			"/&lsaquo;/i" => "&#8249;",
			"/&rsaquo;/i" => "&#8250;",
			"/&oline;/i" => "&#8254;",
			"/&frasl;/i" => "&#8260;",
			"/&euro;/i" => "&#8364;",
			"/&image;/i" => "&#8465;",
			"/&weierp;/i" => "&#8472;",
			"/&real;/i" => "&#8476;",
			"/&trade;/i" => "&#8482;",
			"/&alefsym;/i" => "&#8501;",
			"/&larr;/i" => "&#8592;",
			"/&uarr;/i" => "&#8593;",
			"/&rarr;/i" => "&#8594;",
			"/&darr;/i" => "&#8595;",
			"/&harr;/i" => "&#8596;",
			"/&crarr;/i" => "&#8629;",
			"/&larr;/i" => "&#8656;",
			"/&uarr;/i" => "&#8657;",
			"/&rarr;/i" => "&#8658;",
			"/&darr;/i" => "&#8659;",
			"/&harr;/i" => "&#8660;",
			"/&forall;/i" => "&#8704;",
			"/&part;/i" => "&#8706;",
			"/&exist;/i" => "&#8707;",
			"/&empty;/i" => "&#8709;",
			"/&nabla;/i" => "&#8711;",
			"/&isin;/i" => "&#8712;",
			"/&notin;/i" => "&#8713;",
			"/&ni;/i" => "&#8715;",
			"/&prod;/i" => "&#8719;",
			"/&sum;/i" => "&#8721;",
			"/&minus;/i" => "&#8722;",
			"/&lowast;/i" => "&#8727;",
			"/&radic;/i" => "&#8730;",
			"/&prop;/i" => "&#8733;",
			"/&infin;/i" => "&#8734;",
			"/&ang;/i" => "&#8736;",
			"/&and;/i" => "&#8743;",
			"/&or;/i" => "&#8744;",
			"/&cap;/i" => "&#8745;",
			"/&cup;/i" => "&#8746;",
			"/&int;/i" => "&#8747;",
			"/&there4;/i" => "&#8756;",
			"/&sim;/i" => "&#8764;",
			"/&cong;/i" => "&#8773;",
			"/&asymp;/i" => "&#8776;",
			"/&ne;/i" => "&#8800;",
			"/&equiv;/i" => "&#8801;",
			"/&le;/i" => "&#8804;",
			"/&ge;/i" => "&#8805;",
			"/&sub;/i" => "&#8834;",
			"/&sup;/i" => "&#8835;",
			"/&nsub;/i" => "&#8836;",
			"/&sube;/i" => "&#8838;",
			"/&supe;/i" => "&#8839;",
			"/&oplus;/i" => "&#8853;",
			"/&otimes;/i" => "&#8855;",
			"/&perp;/i" => "&#8869;",
			"/&sdot;/i" => "&#8901;",
			"/&lceil;/i" => "&#8968;",
			"/&rceil;/i" => "&#8969;",
			"/&lfloor;/i" => "&#8970;",
			"/&rfloor;/i" => "&#8971;",
			"/&lang;/i" => "&#9001;",
			"/&rang;/i" => "&#9002;",
			"/&loz;/i" => "&#9674;",
			"/&spades;/i" => "&#9824;",
			"/&clubs;/i" => "&#9827;",
			"/&hearts;/i" => "&#9829;",
			"/&diams;/i" => "&#9830;",
			"/&(?!#?[a-z0-9]+;)/" => "&amp;" 
			];

		return preg_replace(array_keys($replace), array_values($replace), $feed_data);
		
	}

}
?>
